# HWLOC is a private dependency and only needs to be pulled in for static
# builds
set(Legion_USE_HWLOC @Legion_USE_HWLOC@)
if((NOT @BUILD_SHARED_LIBS@) AND Legion_USE_HWLOC)
  set(HWLOC_INCLUDE_DIR @HWLOC_INCLUDE_DIR@)
  set(HWLOC_LIBRARY @HWLOC_LIBRARY@)
  find_package(HWLOC REQUIRED)
endif()

# GASNet is a public dependency and always needs to be pulled in
set(Legion_USE_GASNet @Legion_USE_GASNet@)
if(Legion_USE_GASNet)
  set(GASNet_CONDUIT @GASNet_CONDUIT@)
  set(GASNet_THREADING @GASNet_THREADING@)
  set(GASNet_ROOT_DIR @GASNet_ROOT_DIR@)
  find_package(GASNet REQUIRED)
endif()

# LLVM is a private dependency and only needs to be pulled in for static
# builds
set(Legion_USE_LLVM @Legion_USE_LLVM@)
if((NOT @BUILD_SHARED_LIBS@) AND Legion_USE_LLVM)
  set(Legion_LLVM_COMPONENTS @Legion_LLVM_COMPONENTS@)
  set(LLVM_CONFIG_EXECUTABLE @LLVM_CONFIG_EXECUTABLE@)
  find_package(LLVM REQUIRED COMPONENTS ${Legion_LLVM_COMPONENTS})
endif()

# CUDA is only a private dependency of Legion but has a few usage requirements
# so we add it in here
set(Legion_USE_CUDA @Legion_USE_CUDA@)
if(Legion_USE_CUDA)
  set(CUDA_USE_STATIC_CUDA_RUNTIME @CUDA_USE_STATIC_CUDA_RUNTIME@)
  find_package(CUDA REQUIRED)
endif()

include(${CMAKE_CURRENT_LIST_DIR}/LegionTargets.cmake)

if(Legion_USE_CUDA AND NOT Legion_CUDA_NVCC_FLAGS_SET)
  # CUDA has some issues propogating target interface properties so we
  # have to extract them from the target and manually add them to the nvcc
  # flags
  set(PROP $<TARGET_PROPERTY:Legion::Legion,INTERFACE_COMPILE_OPTIONS>)
  set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} ${PROP}")
  set(PROP $<TARGET_PROPERTY:Legion::Legion,INTERFACE_COMPILE_DEFINITIONS>)
  set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} $<$<BOOL:${PROP}>:-D$<JOIN:${PROP}, -D>>")
  set(PROP $<TARGET_PROPERTY:Legion::Legion,INTERFACE_INCLUDE_DIRECTORIES>)
  set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} $<$<BOOL:${PROP}>:-I$<JOIN:${PROP}, -I>>")

  # Make sure we don't get duplicates
  set(Legion_CUDA_NVCC_FLAGS_SET ON)
endif()

